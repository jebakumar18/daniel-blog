import fs from 'fs'import path from 'path'import matter from 'gray-matter'const postsDirectory = path.join(process.cwd(), 'posts')// ✅ 1. Get all stories from index.mdexport function getAllStories() {  if (!fs.existsSync(postsDirectory)) return []  const storyDirs = fs.readdirSync(postsDirectory).filter((name) =>    fs.statSync(path.join(postsDirectory, name)).isDirectory()  )  return storyDirs.map((storyId) => {    const indexPath = path.join(postsDirectory, storyId, 'index.md')    let metadata = {}    if (fs.existsSync(indexPath)) {      const fileContent = fs.readFileSync(indexPath, 'utf-8')      const { data } = matter(fileContent)      metadata = data    }    return {      id: storyId,      title: metadata.title || storyId,      summary: metadata.summary || '',      coverImage: metadata.coverImage || '', // e.g. '/stories/rise-of-elysian-heart/cover.jpg'    }  })}// ✅ 2. Get all chapters for a storyexport function getChapters(storyId) {  const storyPath = path.join(postsDirectory, storyId)  if (!fs.existsSync(storyPath)) return []  const chapterFiles = fs    .readdirSync(storyPath)    .filter((file) => file.endsWith('.md') && file.startsWith('chapter-'))  return chapterFiles.map((filename) => {    const filePath = path.join(storyPath, filename)    const fileContents = fs.readFileSync(filePath, 'utf8')    const { data } = matter(fileContents)    return {      id: filename.replace(/\.md$/, ''),      title: data.title || filename.replace(/\.md$/, ''),    }  })}// ✅ 3. Get chapter content with navigationexport function getChapterContent(storyId, chapterId) {  const filePath = path.join(postsDirectory, storyId, `${chapterId}.md`)  if (!fs.existsSync(filePath)) return null  const fileContents = fs.readFileSync(filePath, 'utf8')  const { data, content } = matter(fileContents)  // Get all chapters to compute prev/next  const chapters = getChapters(storyId)  const index = chapters.findIndex((ch) => ch.id === chapterId)  const prevChapter = index > 0 ? chapters[index - 1]?.id : null  const nextChapter = index < chapters.length - 1 ? chapters[index + 1]?.id : null  return {    title: data.title || chapterId,    date: data.date || null,    content,    prevChapter,    nextChapter,  }}export function getStorySummaryText(storyId) {  const summaryPath = path.join(postsDirectory, storyId, 'summary.txt')  if (fs.existsSync(summaryPath)) {    return fs.readFileSync(summaryPath, 'utf-8')  }  return null}