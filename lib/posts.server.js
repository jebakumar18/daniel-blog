import fs from 'fs'import path from 'path'import matter from 'gray-matter'const postsDirectory = path.join(process.cwd(), 'posts')export function getAllStories() {  if (!fs.existsSync(postsDirectory)) return []  const storyDirs = fs.readdirSync(postsDirectory).filter((name) =>    fs.statSync(path.join(postsDirectory, name)).isDirectory()  )  return storyDirs.map((storyId) => {    const metadataPath = path.join(postsDirectory, storyId, 'metadata.json')    let metadata = {}    if (fs.existsSync(metadataPath)) {      metadata = JSON.parse(fs.readFileSync(metadataPath, 'utf-8'))    }    return {      id: storyId,      title: metadata.title || storyId,      summary: metadata.summary || '',      coverImage: metadata.coverImage || '',    }  })}export function getChapters(storyId) {  const storyPath = path.join(postsDirectory, storyId)  if (!fs.existsSync(storyPath)) return []  const chapterFiles = fs    .readdirSync(storyPath)    .filter((file) => file.endsWith('.md') && file.startsWith('chapter-'))  return chapterFiles.map((filename) => {    const filePath = path.join(storyPath, filename)    const fileContents = fs.readFileSync(filePath, 'utf8')    const { data } = matter(fileContents)    return {      id: filename.replace(/\.md$/, ''),      title: data.title || filename.replace(/\.md$/, ''),    }  })}export function getChapterContent(storyId, chapterId) {  const filePath = path.join(postsDirectory, storyId, `${chapterId}.md`)  if (!fs.existsSync(filePath)) return null  const fileContents = fs.readFileSync(filePath, 'utf8')  const { data, content } = matter(fileContents)  return {    title: data.title || chapterId,    content,  }}