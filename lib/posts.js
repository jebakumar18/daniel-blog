// File: lib/posts.jsimport fs from 'fs'import path from 'path'import matter from 'gray-matter'const postsDirectory = path.join(process.cwd(), 'posts')export function getAllStories() {  if (!fs.existsSync(postsDirectory)) return []  const storyDirs = fs.readdirSync(postsDirectory).filter(name => {    const fullPath = path.join(postsDirectory, name)    return fs.statSync(fullPath).isDirectory()  })  return storyDirs.map(storyId => {    const metadataPath = path.join(postsDirectory, storyId, 'metadata.json')    let metadata = {}    if (fs.existsSync(metadataPath)) {      metadata = JSON.parse(fs.readFileSync(metadataPath, 'utf-8'))    }    return {      id: storyId,      title: metadata.title || storyId,      coverImage: metadata.coverImage || null,      summary: metadata.summary || null,    }  })}export function getAllChapters(storyId) {  const storyPath = path.join(postsDirectory, storyId)  if (!fs.existsSync(storyPath)) return []  const chapterFiles = fs.readdirSync(storyPath).filter(file => file.endsWith('.md'))  return chapterFiles.map(filename => ({    id: filename.replace(/\.md$/, '')  }))}export function getChapterContent(storyId, chapterId) {  const fullPath = path.join(postsDirectory, storyId, `${chapterId}.md`)  if (!fs.existsSync(fullPath)) return null  const fileContents = fs.readFileSync(fullPath, 'utf8')  const { content, data } = matter(fileContents)  return {    content,    data,  }}